# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

        # ------------------------------------------------------------------------
        # Custom service aliases for ports/adapters
        # ------------------------------------------------------------------------

    # ---- Order BC â†’ Catalogue BC (ACL Adapters) ----
    App\Order\Application\Port\StockReservationPort:
        alias: App\Order\Integration\Catalogue\StockReservationAdapter

    App\Order\Application\Port\StockReservationFulfilmentPort:
        alias: App\Order\Integration\Catalogue\StockReservationFulfilmentAdapter

    # ---- Catalogue BC OHS Adapters ----
    App\Catalogue\Contracts\Reservation\StockReservationPort:
            alias: App\Catalogue\Infrastructure\Ohs\StockReservationAdapter

    App\Catalogue\Contracts\Reservation\StockReservationFulfillmentPort:
            alias: App\Catalogue\Infrastructure\Ohs\StockReservationFulfillmentAdapter

    # ------------------------------------------------------------------------
    # Cross-cutting Infrastructure
    # ------------------------------------------------------------------------

    # Global exception listener (maps exceptions to ResponseEnvelope/JsonResponse)
    App\SharedKernel\Infrastructure\Http\Exception\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

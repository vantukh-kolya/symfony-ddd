deptrac:
    paths:
        - ./src
    exclude_files:
        - '#/Tests/#'

    layers:
        # ---- Shared Kernel (shared primitives, value objects, cross-cutting domain services)
        -   name: SharedDomain
            collectors:
                -   type: classNameRegex
                    value: '#^App\\SharedKernel\\Domain\\#'

        -   name: SharedInfrastructure
            collectors:
                -   type: classNameRegex
                    value: '#^App\\SharedKernel\\Infrastructure\\#'

        # ---- Order BC
        # Domain: pure domain model, no framework or persistence dependencies
        -   name: OrderDomain
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Order\\Domain\\#'

        # Application: use-cases (Commands, Handlers, Ports).
        # Orchestrates domain logic and external services via ports.
        -   name: OrderApplication
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Order\\Application\\#'

        # Infrastructure: port implementations, persistence, messaging,
        # technical integration with Doctrine/Symfony/etc.
        -   name: OrderInfrastructure
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Order\\Infrastructure\\#'

        # Presentation: HTTP controllers, CLI commands, GraphQL endpoints.
        # Entry points only, delegating to Application.
        -   name: OrderPresentation
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Order\\Presentation\\#'

        # Integration: ACL layer for interaction with other bounded contexts (e.g., Catalogue)
        -   name: OrderIntegration
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Order\\Integration\\#'

        # ---- Catalogue BC
        -   name: CatalogueDomain
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Catalogue\\Domain\\#'

        -   name: CatalogueApplication
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Catalogue\\Application\\#'

        -   name: CatalogueInfrastructure
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Catalogue\\Infrastructure\\#'

        -   name: CataloguePresentation
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Catalogue\\Presentation\\#'

        # Contracts = Published Language. DTOs / interfaces shared with other BCs or external systems.
        -   name: CatalogueContracts
            collectors:
                -   type: classNameRegex
                    value: '#^App\\Catalogue\\Contracts\\#'

        # ---- Third-party layers
        -   name: Doctrine
            collectors:
                -   type: classNameRegex
                    value: '#^Doctrine\\#'

        -   name: Framework
            collectors:
                -   type: classNameRegex
                    value: '#^Symfony\\#'

    ruleset:
        # Shared Kernel
        SharedDomain: [ ]   # must stay dependency-free
        SharedInfrastructure:
            - SharedDomain
            - Doctrine        # persistence/runtime plumbing
            - Framework       # technical details (logging, DI, etc.)

        # Order BC
        OrderDomain: [ SharedDomain ]   # pure domain, only depends on shared primitives
        OrderApplication:
            - OrderDomain
            - SharedDomain
        OrderInfrastructure:
            - OrderDomain
            - SharedDomain
            - Doctrine
            - SharedInfrastructure
            - Framework
        OrderPresentation:
            - OrderApplication
            - Framework
        OrderIntegration:
            - OrderApplication
            - CatalogueContracts   # ACL depends only on published language of other BC

        # Catalogue BC
        CatalogueDomain: [ SharedDomain ]
        CatalogueApplication:
            - CatalogueDomain
            - SharedDomain
            - CatalogueContracts   # Application may see its own Contracts (OHS)
        CatalogueInfrastructure:
            - CatalogueDomain
            - CatalogueApplication
            - SharedDomain
            - Doctrine
            - SharedInfrastructure
            - CatalogueContracts
            - Framework
        CataloguePresentation:
            - CatalogueApplication
            - Framework

    analyser:
        types: [ class, use, function_call ]
